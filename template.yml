AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda test

Globals:
  Api:
    Name: 
      Fn::Sub: api-${AWS::StackName}
    TracingEnabled: true
    Cors:
      AllowOrigin: "'*'"
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
  Function:
    Environment:
        Variables:
          MYSQL_HOST: "data.c30e4omc2t08.us-west-1.rds.amazonaws.com"
          MYSQL_USER: "admin"
          MYSQL_DATABASE: "data"
          MYSQL_PASSWORD: "admin123"
          MYSQL_PORT: "3306"

Resources:
  getUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.9
      MemorySize: 128
      Timeout: 360
      CodeUri: modules/users
      Handler: get_users.lambda_handler
      Description:
        Fn::Sub: get-users        
      FunctionName: 
        Fn::Sub: get-users-${AWS::StackName}
      Events:
        getUser:
          Type: Api
          Properties:
            Path: /users
            Method: get
        optionsUser:
          Type: Api
          Properties:
            Path: /users
            Method: options
  PostUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.9
      MemorySize: 128
      Timeout: 360
      CodeUri: modules/users
      Handler: post_user.lambda_handler
      Description:
        Fn::Sub: post-user        
      FunctionName: 
        Fn::Sub: post-user-${AWS::StackName}
      Events:
        postUser:
          Type: Api
          Properties:
            Path: /users
            Method: post
          